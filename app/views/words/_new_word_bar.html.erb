<div id="input_area">
  <%= form_tag({:controller => "words", :action => "create"}, :id => "new_word_form") do %>
    <%= hidden_field_tag(:word_name, @title_word) %>
    <%= hidden_field_tag(:phoneme_string) %>
    <%= submit_tag "Create Word" %>
  <% end %>

  <button id="phoneme_button">Play Word</button>
  <!-- <button id="phoneme_button" data-phonemes="jh-eh-s-t-er">Play 'Jester'</button> -->
</div>

<div id="wr_heading_row" class="word_table heading">
  <label class="prompt">
    <span class="prompt-text">
      Enter a phoneme:
    </span>
    <div class="phoneme_text "> 
      <input id="new_phoneme" class="main-input" type="text">
    </div>
  </label>
  <div class="phonemes reversed">
    <div class="spacer reversed"> </div>
  </div>
</div>

<script>
  $(document).delegate('*', 'keypress', function (evt) {
    if (!$("#new_phoneme").focus()) {
      $("#new_phoneme").focus().val($("#new_phoneme").val());
    }
  });
  $(document).ready(function() {
    $("#new_phoneme").focus().val($("#new_phoneme").val());
    // $(function() {
    //   $("#new_phoneme").autocomplete({
    //     source: '<%= new_word_path(:json) %>',
    //     select: function(event, ui) {
    //       $("#new_phoneme").val(ui.item.label);
    //       $("#wr_heading_row div.phonemes").append("<div class='single_phoneme reversed'>" + ui.item.label + "</div><div class='spacer reversed'></div>");
    //       $("#new_phoneme").val("");
    //       $("#new_phoneme").focus().val($("#new_phoneme").val());
    //       return false;
    //     }
    //   }).data("uiAutocomplete")._renderItem = function(ul, item) {
    //     return $("<li></li>")
    //       .data("item.autocomplete", item)
    //       .append("<a><span class='autoleft'>" + item.label + " (" + item.type + ")" + " </span></a>")
    //       .appendTo(ul);
    //     };
    // });
    $("#new_phoneme").tokenInput("<%= new_word_path(:json) %>", {
      propertyToSearch: "label",
      resultsFormatter: function(item){ return "<li>" + item.label + " (" + item.type + ")</li>" },
      tokenFormatter: function(item) { return "<li><p class='" + item.label + "'>" + item.label + "</p></li>" },
      hintText: ''
    });
    $("#new_word_form").submit(function() {
      $("#phoneme_string").val($.map($('.token-input-list p'), function(p) { return $(p).text(); }).join('-'));
    });
    $("#phoneme_button").click(function() {
      $("#phoneme_string").val($.map($('.token-input-list p'), function(p) { return $(p).text(); }).join('-'));
      var audios = $.map($("#phoneme_string").val().replace(/[0-9]*/g, "").split("-"), function(val,i) {
        sound = new Audio();
        if (sound.canPlayType('audio/mpeg')) {
          sound.src = "/audio/" + val + ".mp3";
          sound.accessKey = i;
        } else if (sound.canPlayType('audio/ogg')) {
          sound.src = "/audio/" + val + ".ogg";
          sound.accessKey = i;
        } else {
          sound.src = null;
          sound.accessKey = i;
        }
        return sound;
      });
      for (var i = 0; i < (audios.length-1); i++) {
        audios[i].addEventListener("ended", function() { 
          audios[parseInt($(this)[0].accessKey)+1].play();
        }, true);
      }
      audios[0].play();
    });
  });
</script>