<%= form_for @query, :url => query_path do |q| %>
  <div id="input_area">
    <% if @query.dictionary == "0" %>
      <div class="first_segment_field" > 
        <span><%= (@query.reverse=="1") ? "Last segment:" : "First segment:"%></span>
        <%= q.text_field :first_segment_text, :value => (@query.first_segment_text || "") %>
        <%= q.text_field :first_segment, :type => :hidden, :value => (@query.first_segment || "") %>
      </div>
      <div class="num_syllables_field" >
        <span>Number of syllables:</span>
        <%= q.select :num_syllables, options_for_select(@query.num_syllables_filter_options, @query.num_syllables) %>
      </div>
      <div class="word_type_field" >
        <span>Word type:</span>
        <%= q.select :word_type, options_for_select(@query.word_type_filter_options, @query.word_type) %>
      </div>
      <div class="perfect_box" >
        <span>Perfect rhyme:</span>
        <%= q.check_box :perfect %>
      </div>
      <div class="reverse_box" >
        <span>Reverse rhyme:</span>
        <%= q.check_box :reverse %>
      </div>
      <div class="rap_button_box">
        <%= q.submit "Rap" %>
      </div>
    <% else %> 
      <div>
        <%= q.submit "Search" %>
      </div>
    <% end %>
  </div>

  <div id="wr_heading_row" class="word_table heading">
    <div class="text_field overlapping">
      <% if @query.dictionary=="1" %>
        <%= q.text_field :text, :value => (@query.text || ""), :autocomplete => :off, :class => 'main-input' %>
      <% else %>
        <%= q.text_field :text, :value => (@query.text || ""), :class => 'main-input' %>
      <% end %>
      <%= q.text_field :id, :type => :hidden, :value => (@query.id || "") %>
      <%= q.text_field :dictionary, :type => :hidden, :value => (@query.dictionary || "0") %>
    </div>
    <div class="word">
      <!-- background -->
    </div>
    <div class="syllables"> <%= (@query.word.try(&:num_syllables) || "") unless (@query.dictionary=="1") %> </div>
    <% order_class = (@query.reverse=="1") ? "reversed" : "normal_order" %>
    <div class="pronunciation <%= order_class %>">
      <% if @query.dictionary=="1" %>
        <% syllables = [] %>
      <% else %>
        <% syllables = @query.word.try(&:syllables) || [] %>
      <% end %>
      <% if @query.reverse=="1" %>
        <% syllables = syllables.reverse %>
      <% end %>
      <% syllables.each_with_index do |ph,j| %>
        <div class="spacer <%= order_class %>"><%= " -- " unless j == 0 %></div>
        <div class="single_syllable <%= order_class %>"> <%= ph.label.gsub("-"," ") %> </div>
      <% end %>
    </div>
  </div>
<% end %>

<script>
  // $(document).delegate('*', 'keypress', function (evt) {
  //   if (!$("#query_text").focus()) {
  //     $("#query_text").focus().val($("#query_text").val());
  //   }
  //   $("#query_id").val("");
  // });
  $(document).ready(function() {
    $("#query_reverse").click(function() {
      $("#query_first_segment_text").val("");
      $("#query_first_segment").val("");
      if ($(".first_segment_field span").html()=="Last segment:") {
        $(".first_segment_field span").html("First segment:");
      } else {
        $(".first_segment_field span").html("Last segment:");
      }
    });
    $("#query_text").focus().val($("#query_text").val());
    if ($("#query_dictionary").val()!="1") {
      $(function() {
        $("#query_text").autocomplete({
          source: '<%= query_path(:json, {:autocomplete => "words"}) %>',
          select: function(event, ui) {
            $("#query_text").val(ui.item.label);
            $("#query_id").val(ui.item.id);
            if ($(".syllables").val()!="") {
              $("#wr_heading_row div.syllables").html(ui.item.num_syllables);
              if ($("#wr_heading_row div.pronunciation").hasClass("normal_order")) {
                $("#wr_heading_row div.pronunciation").html("<div class='single_syllable normal_order'>" + ui.item.reversed_phonemes.join("</div><div class='spacer normal_order'> - </div><div class='single_phoneme normal_order'>") + "</div>");
              } 
              else if ($("#wr_heading_row div.pronunciation").hasClass("reversed")) {
                $("#wr_heading_row div.pronunciation").html("<div class='single_syllable reversed'>" + ui.item.phonemes.join("</div><div class='spacer reversed'> - </div><div class='single_syllable reversed'>") + "</div>");
              }
            }
            $("#new_query").submit();
            return false;
          }
        }).data("uiAutocomplete")._renderItem = function(ul, item) {
          return $("<li></li>")
            .data("item.autocomplete", item)
            .append("<a><span class='autoleft'>" + item.label + " </span><span class='autoright'> " + item.phonetic_label + "</span></a>")
            .appendTo(ul);
          };
      });
    }
    $(function() {
      var available_segments;
      if ($(".first_segment_field span").html()=="Last segment:") {
        available_segments = "<%= query_path(:json, {autocomplete: 'segments', reverse: '1'}) %>"
      } else {
        available_segments = "<%= query_path(:json, {autocomplete: 'segments', reverse: '0'}) %>"
      }
      $("#query_first_segment_text").autocomplete({
        source: available_segments,
        select: function(event, ui) {
          $("#query_first_segment_text").val(ui.item.label);
          $("#query_first_segment").val(ui.item.id);
          return false;
        }
      }).data("uiAutocomplete")._renderItem = function(ul, item) {
        return $("<li></li>")
          .data("item.autocomplete", item)
          .append("<a><span>" + item.label + " </span></a>")
          .appendTo(ul);
        };
    });
  });
</script>
