<div id="input_area">
  <%= form_tag({:controller => "words", :action => "create"}, :id => "new_word_form") do %>
    <%= hidden_field_tag(:word_name, @title_word) %>
    <%= hidden_field_tag(:phoneme_string) %>
    <%= submit_tag "Create Word" %>
  <% end %>

  <div>
    <audio src="aa.ogg" type='audio/ogg; codecs="vorbis"' controls width="300">
      <p> Not working! </p>
        <!-- <source src="aa.mp3" type="audio/mpeg"> -->
        <!-- <source src="aa.ogg" type='audio/ogg; codecs="vorbis"'> -->
        <!-- <a href="aa.mp3">aa.mp3</a> -->
        <!-- <a href="aa.ogg">aa.ogg</a> -->
    </audio>
    <!-- <audio id="phoneme_audio" src="aa.mp3">
      <p> Not working! </p>
    </audio>
    <button id="phoneme_button">AA0</button> -->
  </div>

</div>

<div id="wr_heading_row" class="word_table heading">
  <label class="prompt">
    <span class="prompt-text">
      Enter a phoneme:
    </span>
    <div class="phoneme_text "> 
      <input id="new_phoneme" class="main-input" type="text">
    </div>
  </label>
  <div class="phonemes reversed">
    <div class="spacer reversed"> </div>
  </div>
</div>

<script>
  $(document).delegate('*', 'keypress', function (evt) {
    if (!$("#new_phoneme").focus()) {
      $("#new_phoneme").focus().val($("#new_phoneme").val());
    }
  });
  $(document).ready(function() {
    $("#new_phoneme").focus().val($("#new_phoneme").val());
    // $(function() {
    //   $("#new_phoneme").autocomplete({
    //     source: '<%= new_word_path(:json) %>',
    //     select: function(event, ui) {
    //       $("#new_phoneme").val(ui.item.label);
    //       $("#wr_heading_row div.phonemes").append("<div class='single_phoneme reversed'>" + ui.item.label + "</div><div class='spacer reversed'></div>");
    //       $("#new_phoneme").val("");
    //       $("#new_phoneme").focus().val($("#new_phoneme").val());
    //       return false;
    //     }
    //   }).data("uiAutocomplete")._renderItem = function(ul, item) {
    //     return $("<li></li>")
    //       .data("item.autocomplete", item)
    //       .append("<a><span class='autoleft'>" + item.label + " (" + item.type + ")" + " </span></a>")
    //       .appendTo(ul);
    //     };
    // });
    $("#new_phoneme").tokenInput("<%= new_word_path(:json) %>", {
              propertyToSearch: "label",
              resultsFormatter: function(item){ return "<li>" + item.label + " (" + item.type + ")</li>" },
              tokenFormatter: function(item) { return "<li><p>" + item.label + "</p></li>" },
              hintText: ''
    });
    $("#new_word_form").submit(function() {
      $("#phoneme_string").val($.map($('.token-input-list p'), function(p) { return $(p).text(); }).join('-'));  
    });
    // $("#phoneme_button").click(function() {
    //   var theSound = $("#phoneme_audio")[0];
    //   // console.log(theSound.volume);
    //   // theSound.volume-=0.1;
    //   // console.log(theSound.volume);
    //   theSound.play();
    // });
  });
</script>